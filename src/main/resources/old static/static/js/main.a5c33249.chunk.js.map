{
  "version": 3,
  "sources": [
    "SocketContext.js",
    "components/VideoPlayer.jsx",
    "components/Notifications.jsx",
    "components/Options.jsx",
    "App.js",
    "index.js"
  ],
  "names": [
    "stompClient",
    "SocketContext",
    "createContext",
    "ContextProvider",
    "children",
    "useState",
    "stream",
    "setStream",
    "me",
    "setMe",
    "users",
    "setUsers",
    "call",
    "setCall",
    "callAccepted",
    "setCallAccepted",
    "callEnded",
    "setCallEnded",
    "name",
    "setName",
    "iceCandidates",
    "setIceCandidates",
    "userID",
    "parts",
    "document",
    "cookie",
    "split",
    "length",
    "pop",
    "shift",
    "getCookie",
    "myVideo",
    "useRef",
    "userVideo",
    "connectionRef",
    "useEffect",
    "socket",
    "SockJS",
    "Stomp",
    "over",
    "navigator",
    "mediaDevices",
    "getUserMedia",
    "video",
    "audio",
    "then",
    "currentStream",
    "current",
    "srcObject",
    "connect",
    "onConnected",
    "onError",
    "console",
    "log",
    "subscribe",
    "incomingCall",
    "onUsernameReceived",
    "leaveCall",
    "saveIceCandidates",
    "send",
    "JSON",
    "stringify",
    "message",
    "findUsersName",
    "id",
    "Object",
    "entries",
    "k",
    "v",
    "payload",
    "parse",
    "body",
    "data",
    "keys",
    "callerName",
    "isReceivedCall",
    "from",
    "caller",
    "signal",
    "Provider",
    "value",
    "callUser",
    "peer",
    "Peer",
    "initiator",
    "trickle",
    "reconnectTimer",
    "iceTransportPolicy",
    "config",
    "iceServers",
    "on",
    "callee",
    "answerCall",
    "useStyles",
    "makeStyles",
    "theme",
    "width",
    "breakpoints",
    "down",
    "gridContainer",
    "justifyContent",
    "flexDirection",
    "paper",
    "padding",
    "border",
    "margin",
    "VideoPlayer",
    "useContext",
    "classes",
    "Grid",
    "container",
    "className",
    "Paper",
    "item",
    "xs",
    "md",
    "Typography",
    "variant",
    "gutterBottom",
    "playsInline",
    "muted",
    "ref",
    "autoPlay",
    "Notifications",
    "styles",
    "display",
    "Button",
    "color",
    "onClick",
    "root",
    "typography",
    "flexGrow",
    "textAlign",
    "marginTop",
    "Options",
    "Container",
    "elevation",
    "noValidate",
    "autoComplete",
    "fullWidth",
    "startIcon",
    "PhoneDisabled",
    "fontSize",
    "map",
    "key",
    "Phone",
    "appBar",
    "borderRadius",
    "alignItems",
    "image",
    "marginLeft",
    "wrapper",
    "App",
    "AppBar",
    "position",
    "align",
    "ReactDOM",
    "render",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.a5c33249.chunk.js",
  "sourcesContent": [
    "import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport Peer from \"simple-peer\";\nimport SockJS from \"sockjs-client\"\nimport Stomp from \"stompjs\"\n\nconst SocketContext = createContext();\nlet stompClient;\n\n/* Pass full URL of deployed server*/\n// const socket = io(\"ws://localhost:5000\");\n\nconst ContextProvider = ({children}) => {\n  /*These are state fields */\n  const [stream, setStream] = useState();\n  const [me, setMe] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [call, setCall] = useState({});\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [iceCandidates, setIceCandidates] = useState({});\n\n  const userID = getCookie(\"user_id\");\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  var connectionRef = useRef();\n\n  useEffect(() => {\n    const socket = new SockJS('/videoCall-video')\n    stompClient = Stomp.over(socket)\n    /* Get permission for microphone and webcam*/\n    navigator.mediaDevices.getUserMedia(\n        {video: true, audio: true}) /* returns a promise*/\n    .then((currentStream) => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    stompClient.connect({}, onConnected, onError)\n  }, []); /* Has an empty dependency array*/\n\n  function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) {\n      return parts.pop().split(';').shift();\n    }\n  }\n\n  const onConnected = () => {\n    console.log(\"This is my user ID: \" + userID)\n    stompClient.subscribe('/topic/video/' + userID + '/incomingCall',\n        incomingCall)\n    stompClient.subscribe('/topic/video/' + userID + '/username',\n        onUsernameReceived)\n    stompClient.subscribe('/topic/video/' + userID + '/endCall', leaveCall)\n    stompClient.subscribe('/topic/video/' + userID + '/iceCandidates', saveIceCandidates)\n\n    stompClient.send(\"/app/video.getAllUsers\", {},\n        JSON.stringify({message: userID}))\n    stompClient.send(\"/app/video.iceCandidates\", {},\n        JSON.stringify({message: userID}))\n  }\n\n  const onError = () => {\n    console.log(\"Error with socket connection!\")\n  }\n\n  function findUsersName(id) {\n    for (const [k, v] of Object.entries(users)) {\n      if (k == id) {\n        return v\n      }\n    }\n  }\n\n  const onUsernameReceived = (payload) => {\n    console.log(\"This is the \" + payload)\n    const message = JSON.parse(payload.body)\n    setUsers(message.data)\n    let name\n    for (const [k, v] of Object.entries(message.data)) {\n      if (k == userID) {\n        name = v\n        break\n      }\n    }\n    setMe(userID)\n    setName(name)\n    console.log(Object.keys(users))\n  }\n\n  const saveIceCandidates = (payload) => {\n    console.log(\"This is the \" + payload)\n    const message = JSON.parse(payload.body)\n    console.log(\"These are the ice candidates \" + message)\n    setIceCandidates(message)\n  }\n\n  const incomingCall = (payload) => {\n    const message = JSON.parse(payload.body);\n    console.log(\"Person calling me \" + message.callerName)\n    setCall({\n      isReceivedCall: true,\n      from: message.caller,\n      name: message.callerName,\n      signal: message.signal\n    })\n    console.log(\"incoming call \" + message)\n  }\n\n  // acceptCall\n  const answerCall = () => {\n    setCallAccepted(true);\n    /*simple peer library usage */\n    /* Initiator is who starts call\n        stream from earlier getUserMedia\n    */\n    const peer = new Peer({\n      initiator: false, trickle: false, stream: stream,\n      config: {\n        iceServers: iceCandidates\n      }\n    });\n\n    peer.on(\"signal\", (data) => {\n      stompClient.send(\"/app/video.acceptCall\", {},\n          JSON.stringify({signal: data, callee: userID, caller: call.from})) //Since we are returning the message to the caller\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      /* This is the other persons stream*/\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n\n  }\n  // CallPeer\n  const callUser = (id) => {\n    /*we are the person calling */\n    const peer = new Peer({\n      initiator: true, trickle: false,\n      reconnectTimer: 100,\n      iceTransportPolicy: 'relay',\n      config: {\n          iceServers: iceCandidates\n        // iceServers: [\n        //   {\n        //     \"url\": \"stun:stun2.1.google.com:19302\"\n        //     // \"url\" : \"stun:stun2.1.google.com:19302\"\n        //     // urls: \"stun.node4.co.uk:3478?transport=tcp\",\n        //     // username: \"sultan1640@gmail.com\",\n        //     // credential: \"98376683\",\n        //   }\n        // ]\n      }, stream: stream,\n    });\n    console.log(\"The user has been called by \" + id)\n    console.log(\"Message being sent: \")\n    peer.on(\"signal\", (data) => {\n      console.log(JSON.stringify({callee: id, caller: userID, signal: data}))\n      stompClient.send(\"/app/video.callUser\", {},\n          JSON.stringify({callee: id, caller: userID, signal: data}))\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    const onCallAccepted = (signal) => {\n      setCallAccepted(true);\n      const message = JSON.parse(signal.body)\n      setCall({name: findUsersName(id), from: id})\n      peer.signal(message.signal)\n    }\n    stompClient.subscribe('/topic/video/' + userID + '/callAccepted',\n        onCallAccepted)\n\n    connectionRef.current = peer;\n  }\n\n  function resetCall() {\n    setCallAccepted(false)\n    setCallEnded(false)\n    setCall({})\n  }\n\n  const leaveCall = () => {\n    console.log(\"LEAVING THE CALL \" + call.from)\n    stompClient.send(\"/app/video.endCall\", {},\n        JSON.stringify({message: call.from}))\n    setCallEnded(true);\n    // connectionRef.current.destroy(); /*Stop receiving input from user camera and microphone */\n    // window.location.reload();\n    resetCall()\n  }\n\n  return (\n      /*This exposes all the information in this file to the package */\n      < SocketContext.Provider\n  value = {\n  {\n    call, callAccepted, myVideo, userVideo, stream, name, setName, callEnded, me, users, callUser, leaveCall, answerCall\n  }\n}>\n  {\n    children\n  }\n<\n  /SocketContext.Provider >\n)\n  ;\n\n}\n\nexport {ContextProvider, SocketContext};\n\n",
    "import React, { useContext } from 'react'\nimport { Grid, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SocketContext } from \"../SocketContext\"\n\nconst useStyles = makeStyles((theme) => ({\n    video: {\n        width: '550px',\n        [theme.breakpoints.down('xs')]: {\n            width: '300px',\n        },\n    },\n    gridContainer: {\n        justifyContent: 'center',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    paper: {\n        padding: '10px',\n        border: '2px solid black',\n        margin: '10px',\n    },\n}));\n\nconst VideoPlayer = () => {\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.gridContainer}>\n            {\n                // Our own video\n                // if there is a stream, then render our own stream\n                stream && (\n                    <Paper className={classes.paper}>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h5\" gutterBottom>{name}</Typography>\n                            {/* We want to mute our own video, autoplay to immediately start */}\n                            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n                        </Grid>\n                    </Paper>\n                )\n            }\n\n            {\n                // User video\n                // Show user's stream if they are in the call\n                callAccepted && !callEnded && (\n                    < Paper className={classes.paper}>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h5\" gutterBottom>{call.name}</Typography>\n                            {/* We want to mute our own video, autoplay to immediately start */}\n                            <video playsInline ref={userVideo} autoPlay className={classes.video} />\n                        </Grid>\n                    </Paper>\n                )\n            }\n\n        </Grid >\n    );\n}\n\nexport default VideoPlayer\n",
    "import React, { useContext } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nimport { SocketContext } from \"../SocketContext\";\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n  return (\n    <>\n      {call.isReceivedCall && !callAccepted && (\n        <div styles={{ display: \"flex\", justifyContent: \"center\" }}>\n          <h1>{call.name} is calling: </h1>\n          <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n            Answer\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notifications;\n",
    "import React, { useContext, useState } from 'react'\nimport { Button, TextField, Grid, Typography, Container, Paper } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\n\nimport { SocketContext } from \"../SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    gridContainer: {\n        width: '100%',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    typography: {\n        flexGrow: 1,\n        textAlign: \"center\"\n    },\n    container: {\n        width: '600px',\n        margin: '35px 0',\n        padding: 0,\n        [theme.breakpoints.down('xs')]: {\n            width: '80%',\n        },\n    },\n    margin: {\n        marginTop: 20,\n    },\n    padding: {\n        padding: 20,\n    },\n    paper: {\n        padding: '10px 20px',\n        border: '2px solid black',\n    },\n}));\n\n\nconst Options = ({ children }) => {\n    const { me, users, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n    const [idToCall, setIdToCall] = useState(\"\");\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.container}>\n            <Paper elevation={10} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <Grid container className={classes.gridContainer}>\n                        {/*<Grid item xs={12} md={6} className={classes.padding}>*/}\n                            {/*<Typography gutterBottom variant=\"h6\">Account Info</Typography>*/}\n                            {/*<TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />*/}\n                            {/*<CopyToClipboard text={me} className={classes.margin}>*/}\n                            {/*    <Button variant=\"contained\" col+or=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>*/}\n                            {/*        Copy Your ID*/}\n                            {/*    </Button>*/}\n                            {/*</CopyToClipboard>*/}\n                        {/*</Grid>*/}\n\n                        <Grid item xs={12} md={12} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\"  className={classes.typography}>Select a person to call</Typography>\n                            {/*<TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />*/}\n                            {callAccepted && !callEnded && (\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth startIcon={<PhoneDisabled fontSize=\"large\" />} onClick={leaveCall} className={classes.margin}>\n                                    End call\n                                </Button>\n                            )\n                                // :(\n                                // <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Phone fontSize=\"large\" />} onClick={() => callUser(idToCall)} className={classes.margin}>\n                                //     Call\n                                // </Button>\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        {Object.entries(users).map(([key, value]) => {\n                        {/*{Object.keys(users).map(key => {*/}\n                            console.log(\"This is me \" + key + \"-\" + value)\n                            if (key === me) {\n                                return null;\n                            }\n                            return (\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Phone fontSize=\"large\" />} onClick={() => callUser(key)} className={classes.margin}>\n                                    Call {value}\n                                </Button>\n                            );\n                        })}\n                    </Grid>\n                </form>\n                {children}\n            </Paper>\n\n        </Container>\n    )\n}\n\nexport default Options\n",
    "import React from 'react'\nimport {Typography, AppBar} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport Notifications from \"./components/Notifications\";\nimport Options from \"./components/Options\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 100px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '600px',\n        border: '2px solid black',\n    \n        [theme.breakpoints.down('xs')]: {\n          width: '90%',\n        },\n      },\n      image: {\n        marginLeft: '15px',\n      },\n      wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n      },\n    }));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper}>\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n                <Typography variant=\"h4\" align=\"center\">Video Call</Typography>\n            </AppBar>\n            <VideoPlayer />\n            <Options>\n                <Notifications />\n            </Options>\n        </div>\n    )\n}\n\nexport default App\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport {ContextProvider} from \"./SocketContext\";\nimport \"./styles.css\";\n\nReactDOM.render(\n    <ContextProvider>\n        <App />\n    </ContextProvider>,\n    document.getElementById('root'));\n\n        \n"
  ],
  "sourceRoot": ""
}