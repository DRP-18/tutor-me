{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["stompClient","SocketContext","createContext","ContextProvider","children","useState","stream","setStream","me","setMe","users","setUsers","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","userID","parts","document","cookie","split","length","pop","shift","getCookie","myVideo","useRef","userVideo","connectionRef","useEffect","socket","SockJS","Stomp","over","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","connect","onConnected","onError","console","log","subscribe","incomingCall","onUsernameReceived","leaveCall","send","JSON","stringify","message","findUsersName","id","Object","entries","k","v","payload","parse","body","data","keys","callerName","isReceivedCall","from","caller","signal","Provider","value","callUser","peer","Peer","initiator","trickle","on","callee","answerCall","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","styles","display","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","map","key","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b14c6b83.chunk.js","sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport Peer from \"simple-peer\";\nimport SockJS from \"sockjs-client\"\nimport Stomp from \"stompjs\"\n\nconst SocketContext = createContext();\nlet stompClient;\n\n/* Pass full URL of deployed server*/\n// const socket = io(\"ws://localhost:5000\");\n\nconst ContextProvider = ({children}) => {\n  /*These are state fields */\n  const [stream, setStream] = useState();\n  const [me, setMe] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [call, setCall] = useState({});\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const userID = getCookie(\"user_id\");\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  var connectionRef = useRef();\n\n  useEffect(() => {\n    const socket = new SockJS('/videoCall-video')\n    stompClient = Stomp.over(socket)\n    /* Get permission for microphone and webcam*/\n    navigator.mediaDevices.getUserMedia(\n        {video: true, audio: true}) /* returns a promise*/\n    .then((currentStream) => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    stompClient.connect({}, onConnected, onError)\n  }, []); /* Has an empty dependency array*/\n\n  function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) {\n      return parts.pop().split(';').shift();\n    }\n  }\n\n  const onConnected = () => {\n    console.log(\"This is my user ID: \" + userID)\n    stompClient.subscribe('/topic/video/' + userID + '/incomingCall',\n        incomingCall)\n    stompClient.subscribe('/topic/video/' + userID + '/username',\n        onUsernameReceived)\n    stompClient.subscribe('/topic/video/' + userID + '/endCall', leaveCall)\n    stompClient.send(\"/app/video.getAllUsers\", {},\n        JSON.stringify({message: userID}))\n  }\n\n  const onError = () => {\n    console.log(\"Error with socket connection!\")\n  }\n\n  function findUsersName(id) {\n    for (const [k, v] of Object.entries(users)) {\n      if (k == id) {\n        return v\n      }\n    }\n  }\n\n  const onUsernameReceived = (payload) => {\n    console.log(\"This is the \" + payload)\n    const message = JSON.parse(payload.body)\n    setUsers(message.data)\n    let name\n    for (const [k, v] of Object.entries(message.data)) {\n      if (k == userID) {\n        name = v\n        break\n      }\n    }\n    setMe(userID)\n    setName(name)\n    console.log(Object.keys(users))\n  }\n\n  const incomingCall = (payload) => {\n    const message = JSON.parse(payload.body);\n    console.log(\"Person calling me \" + message.callerName)\n    setCall({\n      isReceivedCall: true,\n      from: message.caller,\n      name: message.callerName,\n      signal: message.signal\n    })\n    console.log(\"incoming call \" + message)\n  }\n\n  // acceptCall\n  const answerCall = () => {\n    setCallAccepted(true);\n    /*simple peer library usage */\n    /* Initiator is who starts call\n        stream from earlier getUserMedia\n    */\n    const peer = new Peer({initiator: false, trickle: false, stream: stream});\n\n    peer.on(\"signal\", (data) => {\n      stompClient.send(\"/app/video.acceptCall\", {},\n          JSON.stringify({signal: data, callee: userID, caller: call.from})) //Since we are returning the message to the caller\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      /* This is the other persons stream*/\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n\n  }\n  // CallPeer\n  const callUser = (id) => {\n    /*we are the person calling */\n    const peer = new Peer({\n      initiator: true, trickle: false, stream: stream,\n    });\n    console.log(\"The user has been called by \" + id)\n    console.log(\"Message being sent: \")\n    peer.on(\"signal\", (data) => {\n      console.log(JSON.stringify({callee: id, caller: userID, signal: data}))\n      stompClient.send(\"/app/video.callUser\", {},\n          JSON.stringify({callee: id, caller: userID, signal: data}))\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    const onCallAccepted = (signal) => {\n      setCallAccepted(true);\n      const message = JSON.parse(signal.body)\n      setCall({name: findUsersName(id), from:id})\n      peer.signal(message.signal)\n    }\n    stompClient.subscribe('/topic/video/' + userID + '/callAccepted',\n        onCallAccepted)\n\n    connectionRef.current = peer;\n  }\n\n  function resetCall() {\n    setCallAccepted(false)\n    setCallEnded(false)\n    setCall({})\n  }\n\n  const leaveCall = () => {\n    console.log(\"LEAVING THE CALL \" + call.from)\n    stompClient.send(\"/app/video.endCall\", {},\n        JSON.stringify({message: call.from}))\n    setCallEnded(true);\n    // connectionRef.current.destroy(); /*Stop receiving input from user camera and microphone */\n    // window.location.reload();\n    resetCall()\n  }\n\n  return (\n      /*This exposes all the information in this file to the package */\n      < SocketContext.Provider\n  value = {\n  {\n    call, callAccepted, myVideo, userVideo, stream, name, setName, callEnded, me, users, callUser, leaveCall, answerCall\n  }\n}>\n  {\n    children\n  }\n<\n  /SocketContext.Provider >\n)\n  ;\n\n}\n\nexport {ContextProvider, SocketContext};\n\n","import React, { useContext } from 'react'\nimport { Grid, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SocketContext } from \"../SocketContext\"\n\nconst useStyles = makeStyles((theme) => ({\n    video: {\n        width: '550px',\n        [theme.breakpoints.down('xs')]: {\n            width: '300px',\n        },\n    },\n    gridContainer: {\n        justifyContent: 'center',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    paper: {\n        padding: '10px',\n        border: '2px solid black',\n        margin: '10px',\n    },\n}));\n\nconst VideoPlayer = () => {\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.gridContainer}>\n            {\n                // Our own video\n                // if there is a stream, then render our own stream\n                stream && (\n                    <Paper className={classes.paper}>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h5\" gutterBottom>{name}</Typography>\n                            {/* We want to mute our own video, autoplay to immediately start */}\n                            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n                        </Grid>\n                    </Paper>\n                )\n            }\n\n            {\n                // User video\n                // Show user's stream if they are in the call\n                callAccepted && !callEnded && (\n                    < Paper className={classes.paper}>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h5\" gutterBottom>{call.name}</Typography>\n                            {/* We want to mute our own video, autoplay to immediately start */}\n                            <video playsInline ref={userVideo} autoPlay className={classes.video} />\n                        </Grid>\n                    </Paper>\n                )\n            }\n\n        </Grid >\n    );\n}\n\nexport default VideoPlayer\n","import React, { useContext } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nimport { SocketContext } from \"../SocketContext\";\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n  return (\n    <>\n      {call.isReceivedCall && !callAccepted && (\n        <div styles={{ display: \"flex\", justifyContent: \"center\" }}>\n          <h1>{call.name} is calling: </h1>\n          <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n            Answer\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notifications;\n","import React, { useContext, useState } from 'react'\nimport { Button, TextField, Grid, Typography, Container, Paper } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\n\nimport { SocketContext } from \"../SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    gridContainer: {\n        width: '100%',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    container: {\n        width: '600px',\n        margin: '35px 0',\n        padding: 0,\n        [theme.breakpoints.down('xs')]: {\n            width: '80%',\n        },\n    },\n    margin: {\n        marginTop: 20,\n    },\n    padding: {\n        padding: 20,\n    },\n    paper: {\n        padding: '10px 20px',\n        border: '2px solid black',\n    },\n}));\n\n\nconst Options = ({ children }) => {\n    const { me, users, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n    const [idToCall, setIdToCall] = useState(\"\");\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.container}>\n            <Paper elevation={10} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <Grid container className={classes.gridContainer}>\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\n                            <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n                            <CopyToClipboard text={me} className={classes.margin}>\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\n                                    Copy Your ID\n                                </Button>\n                            </CopyToClipboard>\n                        </Grid>\n\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Make a call</Typography>\n                            <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n                            {callAccepted && !callEnded ? (\n                                <Button variant=\"contained\" color=\"secondary\" fullWidth startIcon={<PhoneDisabled fontSize=\"large\" />} onClick={leaveCall} className={classes.margin}>\n                                    End call\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Phone fontSize=\"large\" />} onClick={() => callUser(idToCall)} className={classes.margin}>\n                                    Call\n                                </Button>\n\n                            )\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                        {Object.entries(users).map(([key, value]) => {\n                        {/*{Object.keys(users).map(key => {*/}\n                            console.log(\"This is me \" + key + \"-\" + value)\n                            if (key === me) {\n                                return null;\n                            }\n                            return (\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Phone fontSize=\"large\" />} onClick={() => callUser(key)} className={classes.margin}>\n                                    Call {value}\n                                </Button>\n                            );\n                        })}\n                    </Grid>\n                </form>\n                {children}\n            </Paper>\n\n        </Container>\n    )\n}\n\nexport default Options\n","import React from 'react'\nimport {Typography, AppBar} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport Notifications from \"./components/Notifications\";\nimport Options from \"./components/Options\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 100px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '600px',\n        border: '2px solid black',\n    \n        [theme.breakpoints.down('xs')]: {\n          width: '90%',\n        },\n      },\n      image: {\n        marginLeft: '15px',\n      },\n      wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n      },\n    }));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper}>\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n                <Typography variant=\"h4\" align=\"center\">Video Chat App</Typography>\n            </AppBar>\n            <VideoPlayer />\n            <Options>\n                <Notifications />\n            </Options>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport {ContextProvider} from \"./SocketContext\";\nimport \"./styles.css\";\n\nReactDOM.render(\n    <ContextProvider>\n        <App />\n    </ContextProvider>,\n    document.getElementById('root'));\n\n        \n"],"sourceRoot":""}